{"version":3,"sources":["components/UI/card.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItems.js","components/Charts/ChartBar.js","components/Charts/Chart.js","components/Expenses/ExpenseChart.js","components/Expenses/ExpensesFiler.js","components/Expenses/Expense.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","cardDiv","className","children","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ChartBar","barfillHeight","maxValue","Math","round","value","style","height","label","Chart","dataPointValues","dataPoints","map","dataPoint","totalMax","max","ExpenseChart","expenses","expense","getMonth","ExpensesFilter","selected","onChange","event","onChangeFilter","target","Expense","useState","filteredYear","setFilteredYear","filteredExpense","filter","toString","expensesContent","length","id","selectedYear","ExpenseForm","newTitle","setNewTitle","newAmount","setNewAmount","newDate","setNewDate","isValidTitle","setIsValidTitle","isValidAmount","setIsValidAmount","onSubmit","preventDefault","Date","trim","onSaveExpenseData","color","type","min","step","NewExpense","enteredData","ExpenseData","random","onAddExpense","dummyData","App","setExpenses","previousExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1eb450b7.chunk.js","sourcesContent":["import './Card.css';\r\n\r\nfunction Card(props){\r\n    const cardDiv = 'card ' + props.className;\r\n    return <div className={cardDiv}>{props.children}</div>\r\n}\r\n\r\nexport default Card;","import './ExpenseDate.css'\r\nimport Card from '../UI/card'\r\n\r\nfunction ExpenseDate(props) {\r\n    const month = props.date.toLocaleString('en-US',{month:'long'});\r\n    const day = props.date.toLocaleString('en-US',{day:'2-digit'});\r\n    const year = props.date.getFullYear();\r\n    return (\r\n        <Card className=\"whole-date\">\r\n                <div className=\"month\">{month}</div>\r\n                <div className=\"year\">{year}</div>\r\n                <div className=\"day\">{day}</div>\r\n            </Card>\r\n    );\r\n}\r\nexport default ExpenseDate;","import React from \"react\";\r\nimport Card from \"../UI/card\";\r\nimport ExpenseDate from \"./ExpenseDate\"\r\nimport './ExpenseItem.css';\r\n\r\nfunction ExpenseItem(props) {\r\n    \r\n    return (\r\n        <Card className=\"outer-div\">\r\n            <ExpenseDate date={props.date}></ExpenseDate>\r\n            <div className=\"description-div\">\r\n                <h2>{props.title}</h2>\r\n                <div className=\"price\">${props.amount}</div>\r\n            </div>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ExpenseItem;","import React from 'react';\r\nimport './ChartBar.css'\r\n\r\nconst ChartBar = (props)=>{\r\n    let barfillHeight = '0%'\r\n    if(props.maxValue>0){\r\n        barfillHeight = Math.round((props.value/props.maxValue)*100) + '%'\r\n    }\r\n    return (\r\n        <div className=\"chart-bar\">\r\n            <div className=\"chart-bar__inner\">\r\n                <div className=\"chart-bar__fill\" style={{height: barfillHeight}}></div>\r\n            </div>\r\n            <div className=\"chart-bar__label\">{props.label}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChartBar;","import React from \"react\";\r\nimport './Chart.css';\r\nimport ChartBar from './ChartBar';\r\n\r\nconst Chart = (props)=>{\r\nconst dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value)\r\nconst totalMax = Math.max(...dataPointValues)\r\n\r\n    return (\r\n        <div className=\"chart\">\r\n            {props.dataPoints.map(dataPoint =>(\r\n                <ChartBar \r\n                  key={dataPoint.label}\r\n                  value={dataPoint.value}\r\n                  maxValue={totalMax}\r\n                  label={dataPoint.label}\r\n                />\r\n            ))}\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Chart;","import React from \"react\";\r\nimport Chart from '../Charts/Chart';\r\n\r\nconst ExpenseChart = props =>{\r\n    const dataPoints=[\r\n        {label: 'jan' , value:0},\r\n        {label: 'feb' , value:0},\r\n        {label: 'mar' , value:0},\r\n        {label: 'apr' , value:0},\r\n        {label: 'may' , value:0},\r\n        {label: 'jun' , value:0},\r\n        {label: 'jul' , value:0},\r\n        {label: 'aug' , value:0},\r\n        {label: 'sep' , value:0},\r\n        {label: 'oct' , value:0},\r\n        {label: 'nov' , value:0},\r\n        {label: 'dec' , value:0}\r\n    ];\r\n    for(let expense of props.expenses){\r\n        const expenseMonth = expense.date.getMonth();\r\n        dataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n    return <Chart dataPoints={dataPoints}/>\r\n}\r\n\r\nexport default ExpenseChart;","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n    const dropDownChangeHandler = (event)=>{\r\n        props.onChangeFilter(event.target.value)\r\n    }\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropDownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import React, { useState } from \"react\";\r\nimport ExpenseItem from \"./ExpenseItems\";\r\nimport './Expense.css';\r\nimport ExpenseChart from \"./ExpenseChart\";\r\nimport Card from \"../UI/card\";\r\nimport ExpensesFilter from \"./ExpensesFiler\";\r\n\r\nfunction Expense(props) {\r\n  const [filteredYear, setFilteredYear] = useState('2020')\r\n  const filterChangeHandler = selectedYear => {\r\n    setFilteredYear(selectedYear)\r\n  }\r\n  const filteredExpense = props.expenses.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  let expensesContent = <p>No Expenses found</p>;\r\n  if(filteredExpense.length>0){\r\n    expensesContent = filteredExpense.map((expense) => (\r\n      <ExpenseItem \r\n      key={expense.id} \r\n      title={expense.title} \r\n      amount={expense.amount} \r\n      date={expense.date} />\r\n      ))\r\n  }\r\n  return (\r\n    <div>\r\n      <Card className=\"allExpenses\">\r\n        <ExpensesFilter selected={filteredYear} onChangeFilter={filterChangeHandler} />\r\n        <ExpenseChart expenses={filteredExpense}/>\r\n        {expensesContent}\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Expense;","import React,{ useState } from 'react';\r\nimport './ExpenseForm.css'\r\n\r\nconst ExpenseForm = (props)=>{\r\n    const [newTitle,setNewTitle] = useState('');\r\n    const [newAmount,setNewAmount] = useState('');\r\n    const [newDate,setNewDate] = useState('');\r\n    const[isValidTitle,setIsValidTitle] = useState('true')\r\n    const[isValidAmount,setIsValidAmount] = useState('true')\r\n    \r\n    const titleChangeHandler = (event)=>{\r\n        if(event.target.value.trim().length){\r\n            setIsValidTitle(true)\r\n        }\r\n         setNewTitle(event.target.value)\r\n    }\r\n    const amountChangeHandler = (event)=>{\r\n        if(event.target.value.trim().length){\r\n            setIsValidAmount(true)\r\n        }\r\n        setNewAmount(event.target.value)\r\n    }\r\n    const dateChangeHandler = (event)=>{\r\n        setNewDate(event.target.value)\r\n    }\r\n    \r\n    const formSubmitHandler = (event)=>{\r\n        event.preventDefault() \r\n        const expenses = {\r\n            title: newTitle,\r\n            amount: newAmount,\r\n            date: new Date(newDate)\r\n        };\r\n        if(newTitle.trim().length ===0) {\r\n            setIsValidTitle(false);\r\n            return;\r\n        }\r\n        if(newAmount.trim().length ===0){\r\n            setIsValidAmount(false);\r\n            return;\r\n        }\r\n        props.onSaveExpenseData(expenses);\r\n        setNewTitle('')\r\n        setNewAmount('')\r\n        setNewDate('')\r\n    }\r\n    return (\r\n        <form onSubmit={formSubmitHandler}>\r\n        <div className=\"new-expense-outer\">\r\n            <div className=\"new-expense-inner\">\r\n                <label style={{color: !isValidTitle ? 'red' : 'black'}}>Title</label>\r\n                <input value={newTitle} onChange={titleChangeHandler} type=\"text\" />\r\n            </div>\r\n            <div className=\"new-expense-inner\">\r\n                <label style={{color: !isValidAmount ? 'red' : 'black'}}>Amount</label>\r\n                <input value={newAmount} onChange={amountChangeHandler} type=\"number\" min=\"0.01\" step=\"0.01\" />\r\n            </div>\r\n            <div className=\"new-expense-inner\">\r\n                <label>Date</label>\r\n                <input value={newDate} onChange={dateChangeHandler} type=\"date\" />\r\n            </div>\r\n            <div className=\"new-expense-action\">\r\n                <button type='submit'>Add Expense</button>\r\n            </div>\r\n        </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ExpenseForm;","import React from \"react\";\r\nimport './NewExpense.css'\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\n\r\nconst NewExpense = (props) =>{\r\n    const saveExpenseHandler = (enteredData)=>{\r\n        const ExpenseData={\r\n            ...enteredData,\r\n            id: Math.random().toString()\r\n        };\r\n        props.onAddExpense(ExpenseData);\r\n    }\r\n    return <div className=\"new-expense\">\r\n        <ExpenseForm onSaveExpenseData={saveExpenseHandler}/>\r\n    </div> \r\n}\r\nexport default NewExpense;","import React,{ useState } from \"react\";\nimport Expense from \"./components/Expenses/Expense\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst dummyData = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\nfunction App() {\n   const[expenses,setExpenses] = useState(dummyData);\n   const addExpenseHandler = (expense)=>{\n     setExpenses((previousExpenses)=>{\n       return [expense,...previousExpenses]\n     })\n  }\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <div className=\"expense\">\n        <Expense expenses={expenses}></Expense>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}